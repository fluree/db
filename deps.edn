{:deps {org.clojure/clojure              {:mvn/version "1.11.4"}
        org.clojure/clojurescript        {:mvn/version "1.11.132"}
        org.clojure/core.async           {:mvn/version "1.6.681"}
        org.clojure/core.cache           {:mvn/version "1.1.234"}
        org.clojars.mmb90/cljs-cache     {:mvn/version "0.1.4"}
        org.clojure/data.avl             {:mvn/version "0.2.0"}
        environ/environ                  {:mvn/version "1.2.0"}
        metosin/malli                    {:mvn/version "0.17.0"}
        nano-id/nano-id                  {:mvn/version "1.1.0"}
        integrant/integrant              {:mvn/version "0.10.0"}
        com.widdindustries/time-literals {:mvn/version "0.1.10"}

        ;; logging
        org.clojure/tools.logging      {:mvn/version "1.3.0"}
        ch.qos.logback/logback-classic {:mvn/version "1.5.6"}
        org.slf4j/slf4j-api            {:mvn/version "2.0.13"}

        ;; Vector math, BM25
        net.mikera/vectorz-clj              {:mvn/version "0.48.0"}
        com.github.rholder/snowball-stemmer {:mvn/version "1.3.0.581.1"}

        ;; http
        http-kit/http-kit {:mvn/version "2.8.0"}

        ;; parsing / serialization
        com.fluree/json-ld {:git/url "https://github.com/fluree/json-ld.git"
                            :git/sha "6a07ba03bea19fec2d5970dd51da084c9b903789"}
        com.fluree/alphabase                {:mvn/version "3.3.0"}
        cheshire/cheshire                   {:mvn/version "5.13.0"}
        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
        org.clojure/data.xml                {:mvn/version "0.2.0-alpha9"}
        instaparse/instaparse               {:mvn/version "1.5.0"}
        org.clojars.quoll/raphael           {:mvn/version "0.3.12"} ;; turtle (TTL) parsing

        ;; cryptography
        com.fluree/crypto {:git/url "https://github.com/fluree/fluree.crypto.git"
                           :git/sha "aefa358f0b37dc9366e7c8c6ca1bf796735b99e9"}
        org.bouncycastle/bcprov-jdk15on {:mvn/version "1.70"}

        ;; storage
        com.cognitect.aws/api       {:mvn/version "0.8.741"}
        com.cognitect.aws/endpoints {:mvn/version "871.2.32.2"}
        com.cognitect.aws/s3        {:mvn/version "871.2.32.2"}}

 :paths ["src" "resources" "target/classes"]

 :aliases
 {:build
  {:deps       {io.github.clojure/tools.build {:git/tag "v0.10.5"
                                               :git/sha "2a21b7a"}
                slipset/deps-deploy           {:mvn/version "0.2.2"}}
   :ns-default build}

  :dev
  {:extra-paths ["dev" "dev-resources"]
   :extra-deps  {org.clojure/tools.namespace       {:mvn/version "1.5.0"}
                 criterium/criterium               {:mvn/version "0.4.6"}
                 figwheel-sidecar/figwheel-sidecar {:mvn/version "0.5.20"}
                 thheller/shadow-cljs              {:mvn/version "2.28.15"}}}

  :cljtest
  {:extra-paths ["test" "dev-resources" "test-resources"]
   :extra-deps  {lambdaisland/kaocha                   {:mvn/version "1.91.1392"}
                 org.clojure/test.check                {:mvn/version "1.1.1"}
                 com.gfredericks/test.chuck            {:mvn/version "0.2.13"}
                 babashka/fs                           {:mvn/version "0.5.20"}
                 clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                 org.testcontainers/testcontainers     {:mvn/version "1.19.3"}
                 org.testcontainers/localstack         {:mvn/version "1.19.3"}}
   :exec-fn     kaocha.runner/exec-fn
   :exec-args   {:kaocha.filter/skip-meta [:pending :docker]}}

  :pending-tests
  {:extra-paths ["test" "dev-resources" "test-resources"]
   :extra-deps  {lambdaisland/kaocha                   {:mvn/version "1.91.1392"}
                 org.clojure/test.check                {:mvn/version "1.1.1"}
                 babashka/fs                           {:mvn/version "0.5.20"}
                 clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                 org.testcontainers/testcontainers     {:mvn/version "1.19.3"}
                 org.testcontainers/localstack         {:mvn/version "1.19.3"}}
   :exec-fn     kaocha.runner/exec-fn
   :exec-args   {:kaocha.filter/focus-meta [:pending]}}

  :docker-tests
  {:extra-paths ["test" "dev-resources" "test-resources"]
   :extra-deps  {lambdaisland/kaocha                   {:mvn/version "1.91.1392"}
                 org.clojure/test.check                {:mvn/version "1.1.1"}
                 com.gfredericks/test.chuck            {:mvn/version "0.2.13"}
                 babashka/fs                           {:mvn/version "0.5.20"}
                 clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                 org.testcontainers/testcontainers     {:mvn/version "1.19.3"}
                 org.testcontainers/localstack         {:mvn/version "1.19.3"}}
   :exec-fn     kaocha.runner/exec-fn
   :exec-args   {:kaocha.filter/focus-meta [:docker]}}

  :cljstest
  {:extra-paths ["test" "dev-resources"]}

  :js-deps
  {:extra-deps {com.timetraveltoaster/target-bundle-libs {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "target-bundle-libs.core"]}

  :docs
  {:extra-deps {codox/codox {:mvn/version "0.10.8"}}
   :exec-fn    codox.main/generate-docs
   :exec-args  {:namespaces  [fluree.db.api]
                :description "Fluree DB Clojure API Documentation"
                :name        com.fluree/db
                :output-path "docs"}}

  :meta
  {:main-opts ["-m" "fluree.db.meta"]}

  :coverage
  {:extra-paths ["test"]
   :extra-deps  {cloverage/cloverage {:mvn/version "1.2.4"}}
   :main-opts   ["-m" "cloverage.coverage" "-p" "src" "-s" "test" "--output" "scanning_results/coverage"]}

  :eastwood
  {:extra-deps {jonase/eastwood {:mvn/version "1.4.3"}}
   :main-opts  ["-m" "eastwood.lint"
                {:source-paths    ["src" "src-docs"]
                 :test-paths      ["test"]
                 ;; TODO: Un-exclude this when it stops triggering false
                 ;;       positives on "UnsupportedOperationException empty is
                 ;;       not supported on Flake" when using the #Flake data
                 ;;       reader - WSM 2023-02-01
                 :exclude-linters [:implicit-dependencies]}]}

  :ancient
  {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "antq.core"]}

  :clj-kondo
  {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2024.05.24"}}
   :main-opts  ["-m" "clj-kondo.main" "--lint" "src" "--config" ".clj-kondo/config.edn"]}}}
